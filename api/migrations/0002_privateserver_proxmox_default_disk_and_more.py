# Generated by Django 4.2 on 2023-05-29 11:31

import uuid

import django.db.models.deletion
from django.db import migrations, models

import api.helpers.validators


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='privateserver',
            name='proxmox_default_disk',
            field=models.CharField(db_column='ProxmoxDefaultDisk', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='privateserver',
            name='proxmox_default_volume',
            field=models.CharField(db_column='ProxmoxDefaultVolume', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='privateserver',
            name='proxmox_node_name',
            field=models.CharField(db_column='ProxmoxNodeName', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='privateservervm',
            name='vm_bridge',
            field=models.CharField(db_column='VmBridge', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='privateservervm',
            name='vm_cores',
            field=models.CharField(db_column='VmCores', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='privateservervm',
            name='vm_disk',
            field=models.CharField(db_column='VmDisk', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='privateservervm',
            name='vm_id',
            field=models.UUIDField(db_column='VmId', null=True),
        ),
        migrations.AddField(
            model_name='privateservervm',
            name='vm_memory',
            field=models.CharField(db_column='VmMemory', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='privateservervm',
            name='vm_name',
            field=models.CharField(db_column='VmName', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='privateservervm',
            name='vm_socket',
            field=models.CharField(db_column='VmSocket', max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='ProxmoxSubnet',
            fields=[
                ('id', models.UUIDField(db_column='Id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('proxmox_subnet', models.CharField(db_column='ProxmoxSubnet', max_length=50, null=True, validators=[api.helpers.validators.validate_subnet])),
                ('proxmox_mask', models.CharField(db_column='ProxmoxMask', max_length=50, null=True)),
                ('proxmox_gateway', models.CharField(db_column='ProxmoxGateway', max_length=50, null=True)),
                ('private_server', models.ForeignKey(db_column='PrivateServerId', on_delete=django.db.models.deletion.CASCADE, to='api.privateserver')),
            ],
            options={
                'db_table': 'ProxmoxSubnets',
            },
        ),
    ]
